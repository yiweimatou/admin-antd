{"version":3,"sources":["src\\store\\index.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAMA;;AAIA;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,cAAc,SAAd,WAAc,GAAgC;AAAA,QAA/B,YAA+B,yDAAhB,EAAgB;AAAA,QAAZ,OAAY;;AAChD,QAAM,aAAa,wCAAiB,OAAjB,CAAnB;AACA,QAAM,iBAAiB,0BAAvB;AACA,QAAM,WAAW,oBACb,4BAAgB,cAAhB,CADa,EAEb,4BAAgB,UAAhB,CAFa,EAGb,OAAO,iBAAP,GAA2B,OAAO,iBAAP,EAA3B,GAAwD;AAAA,eAAK,CAAL;AAAA,KAH3C,CAAjB;AAKA,QAAM,QAAQ,wBAAY;AAEtB;AAFsB,OAAZ,EAGV,YAHU,EAGI,QAHJ,CAAd;AAIA,0BAAY,UAAZ,CAAuB,cAAvB;AACA,QAAI,OAAO,GAAX,EAAgB;AACZ,eAAO,GAAP,CAAW,MAAX,CAAkB,aAAlB,EAAiC,YAAM;AACnC,gBAAM,WAAW,QAAQ,aAAR,CAAjB;AACA,gBAAM,mBAAmB,uDAAoB,QAApB;AACrB;AADqB,eAAzB;AAGA,kBAAM,cAAN,CAAqB,gBAArB;AACH,SAND;AAOA,eAAO,GAAP,CAAW,MAAX,CAAkB,sBAAlB,EAA0C,YAAM;AAC5C,kCAAY,WAAZ,CAAwB,KAAxB;AACA,oBAAQ,sBAAR,EAAgC,OAAhC,CAAwC,UAAxC,CAAmD,cAAnD;AACH,SAHD;AAIH;AACD,WAAO,KAAP;AACH,CA3BD;;kBA6Be,W","file":"index.js","sourceRoot":"D:/github/admin-antd","sourcesContent":["import {\r\n    compose,\r\n    applyMiddleware,\r\n    createStore,\r\n    combineReducers\r\n} from 'redux'\r\nimport {\r\n    routerMiddleware,\r\n    routerReducer as routing\r\n} from 'react-router-redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport SagaManager from '../sagas/SagaManager'\r\nimport reducers from '../reducers'\r\n\r\nconst configStore = (initialState = {}, history) => {\r\n    const middleware = routerMiddleware(history)\r\n    const sagaMiddleware = createSagaMiddleware()\r\n    const enhancer = compose(\r\n        applyMiddleware(sagaMiddleware),\r\n        applyMiddleware(middleware),\r\n        window.devToolsExtension ? window.devToolsExtension() : f => f\r\n    )\r\n    const store = createStore(combineReducers({\r\n        ...reducers,\r\n        routing,\r\n    }), initialState, enhancer)\r\n    SagaManager.startSagas(sagaMiddleware)\r\n    if (module.hot) {\r\n        module.hot.accept('../reducers', () => {\r\n            const reducers = require('../reducers');\r\n            const combinedReducers = combineReducers({...reducers,\r\n                routing\r\n            })\r\n            store.replaceReducer(combinedReducers)\r\n        })\r\n        module.hot.accept('../sagas/SagaManager', () => {\r\n            SagaManager.cancelSagas(store)\r\n            require('../sagas/SagaManager').default.startSagas(sagaMiddleware)\r\n        })\r\n    }\r\n    return store\r\n}\r\n\r\nexport default configStore"]}