{"version":3,"sources":["src\\services\\ApiClient.js"],"names":[],"mappings":"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","file":"ApiClient.js","sourceRoot":"D:/github/admin-antd","sourcesContent":["import fetch from 'isomorphic-fetch'\r\nconst initialFetchConfig = {\r\n    needAuth:false\r\n}\r\nfunction checkStatus(data) {\r\n    if( data.code === 401 ){\r\n        localStorage.clear()\r\n        window.location.reload()\r\n    }\r\n    return data\r\n}\r\nconst ApiClient = {\r\n    get(url, params, fetchConfig = initialFetchConfig) {\r\n        let body\r\n        if (fetchConfig.needAuth) {\r\n            const auth = JSON.parse(localStorage.getItem('auth'))\r\n            const {\r\n                key,\r\n                token\r\n            } = auth\r\n            body = `key=${key}&token=${token}&${queryString(params)}`\r\n        } else {\r\n            body = queryString(params)\r\n        }\r\n        return fetch(`${url}?${body}`, {\r\n                method: 'GET'\r\n            }).then(response =>\r\n                response.ok ?\r\n                response.json() :\r\n                Promise.reject(`${response.status}:${response.statusText}`))\r\n            .then(data => {\r\n                const {\r\n                    code,\r\n                    msg\r\n                } = data\r\n                if (code === 200) {\r\n                    return data\r\n                } else {\r\n                    return Promise.reject(msg)\r\n                }\r\n            })\r\n    },\r\n    post(url,params,fetchConfig=initialFetchConfig){\r\n        let body\r\n        if (fetchConfig.needAuth) {\r\n            const auth = JSON.parse(localStorage.getItem('auth'))\r\n            const {\r\n                key,\r\n                token\r\n            } = auth\r\n            body = `key=${key}&token=${token}&${queryString(params)}`\r\n        } else {\r\n            body = queryString(params)\r\n        }\r\n        return fetch(url, {\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type':'application/x-www-form-urlencoded'\r\n                },\r\n                body\r\n            }).then(response =>\r\n                response.ok ?\r\n                response.json() :\r\n                Promise.reject(`${response.status}:${response.statusText}`))\r\n            .then( data => checkStatus(data) )\r\n            .then(data => {\r\n                const {\r\n                    code,\r\n                    msg\r\n                } = data\r\n                if (code === 200) {\r\n                    return data\r\n                } else {\r\n                    return Promise.reject(msg)\r\n                }\r\n            })\r\n    },\r\n    put(url,params){\r\n        const auth = JSON.parse(localStorage.getItem('auth'))\r\n        const {\r\n            key,\r\n            token\r\n        } = auth\r\n        const body = `key=${key}&token=${token}&${queryString(params)}`\r\n        return fetch(url, {\r\n                method: 'PUT',\r\n                headers:{\r\n                    'Content-Type':'application/x-www-form-urlencoded'\r\n                },\r\n                body:body\r\n            }).then(response =>\r\n                response.ok ?\r\n                response.json() :\r\n                Promise.reject(`${response.status}:${response.statusText}`))\r\n            .then( data => checkStatus(data) )\r\n            .then(data => {\r\n                const {\r\n                    code,\r\n                    msg\r\n                } = data\r\n                if (code === 200) {\r\n                    return data\r\n                } else {\r\n                    return Promise.reject(msg)\r\n                }\r\n            })\r\n    },\r\n    remove(url,params){\r\n        const auth = JSON.parse(localStorage.getItem('auth'))\r\n        const {\r\n            key,\r\n            token\r\n        } = auth\r\n        const body = `key=${key}&token=${token}&${queryString(params)}`\r\n        return fetch(url, {\r\n                method: 'DELETE',\r\n                headers:{\r\n                    'Content-Type':'application/x-www-form-urlencoded'\r\n                },\r\n                body:body\r\n            }).then(response =>\r\n                response.ok ?\r\n                response.json() :\r\n                Promise.reject(`${response.status}:${response.statusText}`))\r\n            .then( data => checkStatus(data) )\r\n            .then(data => {\r\n                const {\r\n                    code,\r\n                    msg\r\n                } = data\r\n                if (code === 200) {\r\n                    return data\r\n                } else {\r\n                    return Promise.reject(msg)\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nfunction queryString(params) {\r\n    let s = ''\r\n    for(let p in params){\r\n        if(params.hasOwnProperty(p)){\r\n            s+=`${p}=${params[p]}&`\r\n        }\r\n    }\r\n    return s\r\n}\r\n\r\nexport default ApiClient"]}